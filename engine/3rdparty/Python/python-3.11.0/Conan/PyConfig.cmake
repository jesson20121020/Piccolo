# option for cmake configure
option(MAKE_PY_CONFIG "Configure the pyconfig." OFF)
option(PY_CONFIG_ONLY "Exit after configure." OFF)

# option for configure
option(PY_OPT_ENABLE_IPV6 "opt: --enable-ipv6" ON)

macro (config_py config_in out_dir)

    message(STATUS "Configuring pyconfig.h ==============")

    # options to macro
    if (PY_OPT_ENABLE_IPV6)
        set (ENABLE_IPV6 1)
    endif ()

    # hardcoded
    set (HAVE_BROKEN_SEM_GETVALUE 1)

    include(CMakePushCheckState)
    include(CheckFunctionExists)
    include(CheckSymbolExists)
    include(CheckIncludeFile)
    include(CheckTypeSize)
    include(CheckStructHasMember)
    include(CheckCXXSourceCompiles)

    # check source compiles
    check_cxx_source_compiles(" \
volatile int val = 1; \
int main() { \
  __atomic_load_n(&val, __ATOMIC_SEQ_CST); \
  return 0; \
}   " HAVE_BUILTIN_ATOMIC)

    # check include files
    check_include_file(alloca.h HAVE_ALLOCA_H)
    check_include_file(asm/types.h HAVE_ASM_TYPES_H)
    check_include_file(bluetooth/bluetooth.h HAVE_BLUETOOTH_BLUETOOTH_H)
    check_include_file(bluetooth.h HAVE_BLUETOOTH_H)
    check_include_file(conio.h HAVE_CONIO_H)
    check_include_file(crypt.h HAVE_CRYPT_H)
    check_include_file(curses.h HAVE_CURSES_H)
    check_include_file(direct.h HAVE_DIRECT_H)
    check_include_file(dirent.h HAVE_DIRENT_H)
    check_include_file(dlfcn.h HAVE_DLFCN_H)
    check_include_file(errno.h HAVE_ERRNO_H)
    check_include_file(fcntl.h HAVE_FCNTL_H)
    check_include_file(grp.h HAVE_GRP_H)
    check_include_file(ieeefp.h HAVE_IEEEFP_H)
    check_include_file(inttypes.h HAVE_INTTYPES_H)
    check_include_file(io.h HAVE_IO_H)
    check_include_file(langinfo.h __HAVE_LANGINFO_H)
    check_include_file(libintl.h HAVE_LIBINTL_H)
    check_include_file(libutil.h HAVE_LIBUTIL_H)
    check_include_file(linux/netlink.h HAVE_LINUX_NETLINK_H)
    check_include_file(linux/tipc.h HAVE_LINUX_TIPC_H)
    check_include_file(memory.h HAVE_MEMORY_H)
    check_include_file(ncurses.h HAVE_NCURSES_H)
    check_include_file(ndir.h HAVE_NDIR_H)
    check_include_file(netdb.h HAVE_NETDB_H)
    check_include_file(net/if.h HAVE_NET_IF_H)
    check_include_file(netpacket/packet.h HAVE_NETPACKET_PACKET_H)
    check_include_file(poll.h HAVE_POLL_H)
    check_include_file(process.h HAVE_PROCESS_H)
    check_include_file(pthread.h HAVE_PTHREAD_H)
    check_include_file(pty.h HAVE_PTY_H)
    check_include_file(sched.h HAVE_SCHED_H)
    check_include_file(shadow.h HAVE_SHADOW_H)
    check_include_file(signal.h HAVE_SIGNAL_H)
    check_include_file(spawn.h HAVE_SPAWN_H)
    check_include_file(stdint.h HAVE_STDINT_H)
    check_include_file(stdlib.h HAVE_STDLIB_H)
    check_include_file(strings.h HAVE_STRINGS_H)
    check_include_file(string.h HAVE_STRING_H)
    check_include_file(stropts.h HAVE_STROPTS_H)
    check_include_file(sysexits.h HAVE_SYSEXITS_H)
    check_include_file(sys/audioio.h HAVE_SYS_AUDIOIO_H)
    check_include_file(sys/bsdtty.h HAVE_SYS_BSDTTY_H)
    check_include_file(sys/dir.h HAVE_SYS_DIR_H)
    check_include_file(sys/epoll.h HAVE_SYS_EPOLL_H)
    check_include_file(sys/event.h HAVE_SYS_EVENT_H)
    check_include_file(sys/file.h HAVE_SYS_FILE_H)
    check_include_file(sys/ioctl.h HAVE_SYS_IOCTL_H)
    check_include_file(sys/kern_control.h HAVE_SYS_KERN_CONTROL_H)
    check_include_file(sys/loadavg.h HAVE_SYS_LOADAVG_H)
    check_include_file(sys/lock.h HAVE_SYS_LOCK_H)
    check_include_file(sys/mkdev.h HAVE_SYS_MKDEV_H)
    check_include_file(sys/modem.h HAVE_SYS_MODEM_H)
    check_include_file(sys/ndir.h HAVE_SYS_NDIR_H)
    check_include_file(sys/param.h HAVE_SYS_PARAM_H)
    check_include_file(sys/poll.h HAVE_SYS_POLL_H)
    check_include_file(sys/random.h HAVE_SYS_RANDOM_H)
    check_include_file(sys/resource.h HAVE_SYS_RESOURCE_H)
    check_include_file(sys/select.h HAVE_SYS_SELECT_H)
    check_include_file(sys/sendfile.h HAVE_SYS_SENDFILE_H)
    check_include_file(sys/socket.h HAVE_SYS_SOCKET_H)
    check_include_file(sys/statvfs.h HAVE_SYS_STATVFS_H)
    check_include_file(sys/stat.h HAVE_SYS_STAT_H)
    check_include_file(sys/sys_domain.h HAVE_SYS_SYS_DOMAIN_H)
    check_include_file(sys/syscall.h HAVE_SYS_SYSCALL_H)
    check_include_file(sys/sysmacros.h HAVE_SYS_SYSMACROS_H)
    check_include_file(sys/termio.h HAVE_SYS_TERMIO_H)
    check_include_file(sys/times.h HAVE_SYS_TIMES_H)
    check_include_file(sys/time.h HAVE_SYS_TIME_H)
    check_include_file(sys/types.h HAVE_SYS_TYPES_H)
    check_include_file(sys/uio.h HAVE_SYS_UIO_H)
    check_include_file(sys/un.h HAVE_SYS_UN_H)
    check_include_file(sys/utsname.h HAVE_SYS_UTSNAME_H)
    check_include_file(sys/wait.h HAVE_SYS_WAIT_H)
    check_include_file(sys/xattr.h HAVE_SYS_XATTR_H)
    check_include_file(termios.h HAVE_TERMIOS_H)
    check_include_file(term.h HAVE_TERM_H)
    check_include_file(thread.h HAVE_THREAD_H)
    check_include_file(unistd.h HAVE_UNISTD_H)
    check_include_file(util.h HAVE_UTIL_H)
    check_include_file(utime.h HAVE_UTIME_H)
    check_include_file(term.h HAVE_TERM_H)
    check_include_file(uuid/uuid.h HAVE_UUID_UUID_H)
    check_include_file(wchar.h HAVE_WCHAR_H)
    check_include_file(stddef.h STDC_HEADERS)
    check_include_file(stdarg.h HAVE_STDARG_PROTOTYPES)
    
    cmake_push_check_state(RESET)
    set(CMAKE_EXTRA_INCLUDE_FILES stdio.h)
    if (HAVE_PTHREAD_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES pthread.h)
    endif()
    if (HAVE_WCHAR_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES wchar.h)
    endif()
    if (HAVE_STDINT_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES stdint.h)
    elseif (HAVE_INTTYPES_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES inttypes.h)
    endif()
    if (HAVE_CURSES_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES curses.h)
    endif()
    if (HAVE_NCURSES_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES ncurses.h)
    endif()
    if (HAVE_DLFCN_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES dlfcn.h)
    endif()
    if (HAVE_POLL_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES poll.h)
    endif()
    if (HAVE_SYS_POLL_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES sys/poll.h)
    endif()
    if (HAVE_FCNTL_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES fcntl.h)
    endif()
    if (HAVE_PTY_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES pty.h)
    endif()
    if (HAVE_MEMORY_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES memory.h)
    endif()
    if (HAVE_SIGNAL_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES signal.h)
    endif()
    if (HAVE_UNISTD_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES unistd.h)
    endif()
    if (HAVE_UTIL_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES util.h)
    endif()
    if (HAVE_UTIME_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES utime.h)
    endif()
    if (HAVE_SYS_SOCKET_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES sys/socket.h)
    endif()
    if (__HAVE_LANGINFO_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES langinfo.h)
    endif()
    if (HAVE_NETDB_H)
        list(APPEND CMAKE_EXTRA_INCLUDE_FILES netdb.h)
    endif()
    if (EMSCRIPTEN)
        set(_old_c_flags ${CMAKE_C_FLAGS})
        set(_old_cxx_flags ${CMAKE_CXX_FLAGS})
        set(CMAKE_C_FLAGS "")
        set(CMAKE_CXX_FLAGS "")
    endif()
    #check type size
    check_type_size(double SIZEOF_DOUBLE)
    check_type_size(float SIZEOF_FLOAT)
    check_type_size(fpos_t SIZEOF_FPOS_T)
    check_type_size(int SIZEOF_INT)
    check_type_size(long SIZEOF_LONG)
    check_type_size("long double" SIZEOF_LONG_DOUBLE)
    check_type_size("long long" SIZEOF_LONG_LONG)
    check_type_size(off_t SIZEOF_OFF_T)
    check_type_size(pid_t SIZEOF_PID_T)
    check_type_size(pthread_t SIZEOF_PTHREAD_T)
    check_type_size(pthread_key_t SIZEOF_PTHREAD_KEY_T)
    check_type_size(short SIZEOF_SHORT)
    check_type_size(size_t SIZEOF_SIZE_T)
    check_type_size(time_t SIZEOF_TIME_T)
    check_type_size(uintptr_t SIZEOF_UINTPTR_T)
    check_type_size(void* SIZEOF_VOID_P)
    check_type_size(wchar_t SIZEOF_WCHAR_T)
    check_type_size(_Bool SIZEOF__BOOL)
    check_type_size(int32_t SIZEOF_INT32_T)
    check_type_size(int64_t SIZEOF_INT64_T)
    check_type_size(uint32_t SIZEOF_UINT32_T)
    check_type_size(uint64_t SIZEOF_UINT64_T)
    check_type_size(ssize_t SIZEOF_SSIZE_T)
    check_type_size("struct addrinfo" SIZEOF_STRUCT_ADDRINFO)
    check_type_size("struct sockaddr_storage" SIZEOF_STRUCT_SOCKADDR_STORAGE)
    if (EMSCRIPTEN)
        set(CMAKE_C_FLAGS ${_old_c_flags})
        set(CMAKE_CXX_FLAGS ${_old_cxx_flags})
    endif()
    if (HAVE_SIZEOF_INT32_T)
        set(HAVE_INT32_T 1)
    endif()
    if (HAVE_SIZEOF_INT64_T)
        set(HAVE_INT64_T 1)
    endif()
    if (HAVE_SIZEOF_UINT32_T)
        set(HAVE_UINT32_T 1)
    endif()
    if (HAVE_SIZEOF_UINT64_T)
        set(HAVE_UINT64_T 1)
    endif()
    if (HAVE_SIZEOF_SSIZE_T)
        set(HAVE_SSIZE_T 1)
    endif()
    if (HAVE_SIZEOF_UINTPTR_T)
        set(HAVE_UINTPTR_T 1)
    endif()
    if (HAVE_SIZEOF_WCHAR_T)
        if (SIZEOF_WCHAR_T GREATER 2 OR SIZEOF_WCHAR_T EQUAL 2)
            set(HAVE_USABLE_WCHAR_T 1)
        endif()
    endif()
    if (HAVE_SIZEOF_LONG_LONG)
        set(HAVE_LONG_LONG 1)
        set(PY_FORMAT_LONG_LONG "\"ll\"")
    endif()
    if (HAVE_SIZEOF_LONG_DOUBLE)
        set(SIZEOF_LONG_DOUBLE 1)
    endif()
    if (HAVE_SIZEOF_STRUCT_ADDRINFO)
        set(HAVE_ADDRINFO 1)
    endif()
    if (HAVE_SIZEOF_STRUCT_SOCKADDR_STORAGE)
        set(HAVE_SOCKADDR_STORAGE 1)
    endif()
    set(Py_USING_UNICODE 1)
    set(Py_UNICODE_SIZE 2)
    if (HAVE_USABLE_WCHAR_T)
        set(PY_UNICODE_TYPE wchar_t)
    else()
        set(PY_UNICODE_TYPE short)
    endif()
    
    #check function exists
    check_function_exists(acosh HAVE_ACOSH)
    check_function_exists(alarm HAVE_ALARM)
    check_function_exists(asinh HAVE_ASINH)
    check_function_exists(atanh HAVE_ATANH)
    check_function_exists(bind_textdomain_codeset HAVE_BIND_TEXTDOMAIN_CODESET)
    check_function_exists(chflags HAVE_CHFLAGS)
    check_function_exists(chown HAVE_CHOWN)
    check_function_exists(chroot HAVE_CHROOT)
    check_function_exists(clock HAVE_CLOCK)
    check_function_exists(confstr HAVE_CONFSTR)
    check_function_exists(copysign HAVE_COPYSIGN)
    check_function_exists(ctermid HAVE_CTERMID)
    check_function_exists(ctermid_r HAVE_CTERMID_R)
    if (HAVE_CURSES_H OR HAVE_NCURSES_H)
        check_function_exists(filter HAVE_CURSES_FILTER)
        check_function_exists(has_key HAVE_CURSES_HAS_KEY)
        check_function_exists(immedok HAVE_CURSES_IMMEDOK)
        check_function_exists(is_pad HAVE_CURSES_IS_PAD)
        check_function_exists(is_term_resized HAVE_CURSES_IS_TERM_RESIZED)
        check_function_exists(resizeterm HAVE_CURSES_RESIZETERM)
        check_function_exists(resize_term HAVE_CURSES_RESIZE_TERM)
        check_function_exists(syncok HAVE_CURSES_SYNCOK)
        check_function_exists(typeahead HAVE_CURSES_TYPEAHEAD)
        check_function_exists(use_env HAVE_CURSES_USE_ENV)
        check_function_exists(wchgat HAVE_CURSES_WCHGAT)
    endif()
    check_function_exists(dlopen HAVE_DLOPEN)
    check_function_exists(dup2 HAVE_DUP2)
    check_function_exists(erf HAVE_ERF)
    check_function_exists(erfc HAVE_ERFC)
    check_function_exists(execv HAVE_EXECV)
    check_function_exists(expm1 HAVE_EXPM1)
    check_function_exists(faccessat HAVE_FACCESSAT)
    check_function_exists(fchdir HAVE_FCHDIR)
    check_function_exists(fchmod HAVE_FCHMOD)
    check_function_exists(fchmodat HAVE_FCHMODAT)
    check_function_exists(fchown HAVE_FCHOWN)
    check_function_exists(fchownat HAVE_FCHOWNAT)
    check_function_exists(fdopendir HAVE_FDOPENDIR)
    check_function_exists(finite HAVE_FINITE)
    check_function_exists(flock HAVE_FLOCK)
    check_function_exists(fork HAVE_FORK)
    check_function_exists(forkpty HAVE_FORKPTY)
    check_function_exists(fpathconf HAVE_FPATHCONF)
    check_function_exists(fseek64 HAVE_FSEEK64)
    check_function_exists(fseeko HAVE_FSEEKO)
    check_function_exists(fstatat HAVE_FSTATAT)
    check_function_exists(fstatvfs HAVE_FSTATVFS)
    check_function_exists(fsync HAVE_FSYNC)
    check_function_exists(ftell64 HAVE_FTELL64)
    check_function_exists(ftello HAVE_FTELLO)
    check_function_exists(ftime HAVE_FTIME)
    check_function_exists(ftruncate HAVE_FTRUNCATE)
    check_function_exists(futimens HAVE_FUTIMENS)
    check_function_exists(futimes HAVE_FUTIMES)
    # check_function_exists(futimesat HAVE_FUTIMESAT)
    check_function_exists(gai_strerror HAVE_GAI_STRERROR)
    check_function_exists(gamma HAVE_GAMMA)
    check_function_exists(getaddrinfo HAVE_GETADDRINFO)
    check_function_exists(getcwd HAVE_GETCWD)
    check_function_exists(flockfile HAVE_GETC_UNLOCKED)
    check_function_exists(getgrouplist HAVE_GETGROUPLIST)
    check_function_exists(getgroups HAVE_GETGROUPS)
    check_function_exists(gethostbyname HAVE_GETHOSTBYNAME)
    check_function_exists(getitimer HAVE_GETITIMER)
    check_function_exists(getloadavg HAVE_GETLOADAVG)
    check_function_exists(getlogin HAVE_GETLOGIN)
    check_function_exists(getnameinfo HAVE_GETNAMEINFO)
    check_function_exists(getpagesize HAVE_GETPAGESIZE)
    check_function_exists(getpeername HAVE_GETPEERNAME)
    check_function_exists(getpgid HAVE_GETPGID)
    check_function_exists(getpgrp HAVE_GETPGRP)
    check_function_exists(getpid HAVE_GETPID)
    check_function_exists(getpriority HAVE_GETPRIORITY)
    check_function_exists(getpwent HAVE_GETPWENT)
    check_function_exists(getsid HAVE_GETSID)
    check_function_exists(getspent HAVE_GETSPENT)
    check_function_exists(getspnam HAVE_GETSPNAM)
    check_function_exists(gettimeofday HAVE_GETTIMEOFDAY)
    check_function_exists(getwd HAVE_GETWD)
    check_function_exists(hstrerror HAVE_HSTRERROR)
    check_function_exists(hypot HAVE_HYPOT)
    check_function_exists(if_nameindex HAVE_IF_NAMEINDEX)
    check_function_exists(inet_aton HAVE_INET_ATON)
    check_function_exists(inet_pton HAVE_INET_PTON)
    check_function_exists(initgroups HAVE_INITGROUPS)
    check_function_exists(kill HAVE_KILL)
    check_function_exists(killpg HAVE_KILLPG)
    check_function_exists(kqueue HAVE_KQUEUE)
    check_function_exists(lchflags HAVE_LCHFLAGS)
    check_function_exists(lchown HAVE_LCHOWN)
    check_function_exists(lgamma HAVE_LGAMMA)
    check_function_exists(link HAVE_LINK)
    check_function_exists(linkat HAVE_LINKAT)
    check_function_exists(lockf HAVE_LOCKF)
    check_function_exists(log1p HAVE_LOG1P)
    check_function_exists(lstat HAVE_LSTAT)
    check_function_exists(lutimes HAVE_LUTIMES)
    check_function_exists(mbrtowc HAVE_MBRTOWC)
    check_function_exists(memmove HAVE_MEMMOVE)
    check_function_exists(mkdirat HAVE_MKDIRAT)
    check_function_exists(mkfifo HAVE_MKFIFO)
    #check_function_exists(mkfifoat HAVE_MKFIFOAT)
    check_function_exists(mknod HAVE_MKNOD)
    check_function_exists(mknodat HAVE_MKNODAT)
    check_function_exists(mktime HAVE_MKTIME)
    check_function_exists(mmap HAVE_MMAP)
    check_function_exists(nice HAVE_NICE)
    check_function_exists(openat HAVE_OPENAT)
    check_function_exists(openpty HAVE_OPENPTY)
    check_function_exists(pathconf HAVE_PATHCONF)
    check_function_exists(pause HAVE_PAUSE)
    check_function_exists(poll HAVE_POLL)
    check_function_exists(posix_spawn HAVE_POSIX_SPAWN)
    check_function_exists(pread HAVE_PREAD)
    check_function_exists(pthread_atfork HAVE_PTHREAD_ATFORK)
    check_function_exists(pthread_init HAVE_PTHREAD_INIT)
    check_function_exists(pthread_kill HAVE_PTHREAD_KILL)
    check_function_exists(pthread_sigmask HAVE_PTHREAD_SIGMASK)
    check_function_exists(putenv HAVE_PUTENV)
    check_function_exists(pwrite HAVE_PWRITE)
    check_function_exists(readlink HAVE_READLINK)
    check_function_exists(readlinkat HAVE_READLINKAT)
    check_function_exists(realpath HAVE_REALPATH)
    check_function_exists(renameat HAVE_RENAMEAT)
    check_function_exists(round HAVE_ROUND)
    check_function_exists(select HAVE_SELECT)
    check_function_exists(sem_getvalue HAVE_SEM_GETVALUE)
    check_function_exists(sem_open HAVE_SEM_OPEN)
    check_function_exists(sem_timedwait HAVE_SEM_TIMEDWAIT)
    check_function_exists(sem_unlink HAVE_SEM_UNLINK)
    check_function_exists(sendfile HAVE_SENDFILE)
    check_function_exists(setegid HAVE_SETEGID)
    check_function_exists(seteuid HAVE_SETEUID)
    check_function_exists(setgid HAVE_SETGID)
    check_function_exists(setgroups HAVE_SETGROUPS)
    check_function_exists(sethostname HAVE_SETHOSTNAME)
    check_function_exists(setitimer HAVE_SETITIMER)
    check_function_exists(setlocale HAVE_SETLOCALE)
    check_function_exists(setpgid HAVE_SETPGID)
    check_function_exists(setpgrp HAVE_SETPGRP)
    check_function_exists(setpriority HAVE_SETPRIORITY)
    check_function_exists(setregid HAVE_SETREGID)
    check_function_exists(setreuid HAVE_SETREUID)
    check_function_exists(setsid HAVE_SETSID)
    check_function_exists(setuid HAVE_SETUID)
    check_function_exists(setvbuf HAVE_SETVBUF)
    check_function_exists(sigaction HAVE_SIGACTION)
    check_function_exists(sigaltstack HAVE_SIGALTSTACK)
    check_function_exists(siginterrupt HAVE_SIGINTERRUPT)
    check_function_exists(sigpending HAVE_SIGPENDING)
    check_function_exists(sigrelse HAVE_SIGRELSE)
    check_function_exists(sigwait HAVE_SIGWAIT)
    check_function_exists(snprintf HAVE_SNPRINTF)
    check_function_exists(socketpair HAVE_SOCKETPAIR)
    check_function_exists(statvfs HAVE_STATVFS)
    check_function_exists(strdup HAVE_STRDUP)
    check_function_exists(strftime HAVE_STRFTIME)
    check_function_exists(strlcpy HAVE_STRLCPY)
    check_function_exists(symlink HAVE_SYMLINK)
    check_function_exists(symlinkat HAVE_SYMLINKAT)
    check_function_exists(sync HAVE_SYNC)
    check_function_exists(sysconf HAVE_SYSCONF)
    check_function_exists(tcgetpgrp HAVE_TCGETPGRP)
    check_function_exists(tcsetpgrp HAVE_TCSETPGRP)
    #check_function_exists(tempnam HAVE_TEMPNAM)
    check_function_exists(tgamma HAVE_TGAMMA)
    check_function_exists(timegm HAVE_TIMEGM)
    check_function_exists(times HAVE_TIMES)
    check_function_exists(tmpfile HAVE_TMPFILE)
    #check_function_exists(tmpnam HAVE_TMPNAM)
    check_function_exists(tmpnam_r HAVE_TMPNAM_R)
    check_function_exists(truncate HAVE_TRUNCATE)
    check_function_exists(uname HAVE_UNAME)
    check_function_exists(unlinkat HAVE_UNLINKAT)
    check_function_exists(unsetenv HAVE_UNSETENV)
    check_function_exists(utimensat HAVE_UTIMENSAT)
    check_function_exists(utimes HAVE_UTIMES)
    check_function_exists(wait3 HAVE_WAIT3)
    check_function_exists(wait4 HAVE_WAIT4)
    check_function_exists(waitid HAVE_WAITID)
    check_function_exists(waitpid HAVE_WAITPID)
    check_function_exists(wcscoll HAVE_WCSCOLL)
    check_function_exists(wcsftime HAVE_WCSFTIME)
    check_function_exists(wcsxfrm HAVE_WCSXFRM)
    check_function_exists(wmemcmp HAVE_WMEMCMP)
    check_function_exists(_getpty HAVE__GETPTY)
    check_symbol_exists(clock_getres time.h HAVE_CLOCK_GETRES)
    check_symbol_exists(clock_gettime time.h HAVE_CLOCK_GETTIME)
    check_symbol_exists(clock_settime time.h HAVE_CLOCK_SETTIME)
    check_symbol_exists(isfinite math.h HAVE_DECL_ISFINITE)
    check_symbol_exists(isinf math.h HAVE_DECL_ISINF)
    check_symbol_exists(isnan math.h HAVE_DECL_ISNAN)
    check_symbol_exists(mremap sys/mman.h HAVE_MREMAP)
    check_symbol_exists(tzname time.h HAVE_DECL_TZNAME)
    if (HAVE_SCHED_H)
        check_symbol_exists(sched_get_priority_max sched.h HAVE_SCHED_GET_PRIORITY_MAX)
        check_symbol_exists(sched_rr_get_interval sched.h HAVE_SCHED_RR_GET_INTERVAL)
        check_symbol_exists(sched_setaffinity sched.h HAVE_SCHED_SETAFFINITY)
        check_symbol_exists(sched_setscheduler sched.h HAVE_SCHED_SETSCHEDULER)
        check_symbol_exists(sched_setparam sched.h HAVE_SCHED_SETPARAM)
    endif()
    if (HAVE_UNISTD_H)
        check_symbol_exists(fdatasync unistd.h HAVE_FDATASYNC)
        check_symbol_exists(fexecve unistd.h HAVE_FEXECVE)
        check_symbol_exists(getentropy unistd.h HAVE_GETENTROPY)
        check_symbol_exists(getresgid unistd.h HAVE_GETRESGID)
        check_symbol_exists(getresuid unistd.h HAVE_GETRESUID)
        check_symbol_exists(pipe2 unistd.h HAVE_PIPE2)
        check_symbol_exists(setresgid unistd.h HAVE_SETRESGID)
        check_symbol_exists(setresuid unistd.h HAVE_SETRESUID)
    endif()
    if (HAVE_SYS_LOCK_H)
        check_symbol_exists(plock sys/lock.h HAVE_PLOCK)
    endif()
    if (HAVE_SYS_EPOLL_H)
        check_symbol_exists(epoll sys/epoll.h HAVE_EPOLL)
    endif()
    if (HAVE_FCNTL_H)
        check_symbol_exists(dup3 fcntl.h HAVE_DUP3)
        check_symbol_exists(posix_fallocate fcntl.h HAVE_POSIX_FALLOCATE)
        check_symbol_exists(posix_fadvise fcntl.h HAVE_POSIX_FADVISE)
    endif()
    if (HAVE_SYS_UIO_H)
        check_symbol_exists(preadv sys/uio.h HAVE_PREADV)
        check_symbol_exists(preadv2 sys/uio.h HAVE_PREADV2)
        check_symbol_exists(pwritev sys/uio.h HAVE_PWRITEV)
        check_symbol_exists(pwritev2 sys/uio.h HAVE_PWRITEV2)
        check_symbol_exists(readv sys/uio.h HAVE_READV)
        check_symbol_exists(writev sys/uio.h HAVE_WRITEV)
    endif()
    if (HAVE_SIGNAL_H)
        check_symbol_exists(sigwaitinfo signal.h HAVE_SIGWAITINFO)
        check_symbol_exists(sigtimedwait signal.h HAVE_SIGTIMEDWAIT)
    endif()
    if (HAVE_STRING_H)
        check_symbol_exists(memrchr string.h HAVE_MEMRCHR)
    endif()
    if (HAVE_DLFCN_H)
        check_symbol_exists(RTLD_DEEPBIND dlfcn.h HAVE_DECL_RTLD_DEEPBIND)
        check_symbol_exists(RTLD_GLOBAL dlfcn.h HAVE_DECL_RTLD_GLOBAL)
        check_symbol_exists(RTLD_LAZY dlfcn.h HAVE_DECL_RTLD_LAZY)
        check_symbol_exists(RTLD_LOCAL dlfcn.h HAVE_DECL_RTLD_LOCAL)
        check_symbol_exists(RTLD_MEMBER dlfcn.h HAVE_DECL_RTLD_MEMBER)
        check_symbol_exists(RTLD_NODELETE dlfcn.h HAVE_DECL_RTLD_NODELETE)
        check_symbol_exists(RTLD_NOLOAD dlfcn.h HAVE_DECL_RTLD_NOLOAD)
        check_symbol_exists(RTLD_NOW dlfcn.h HAVE_DECL_RTLD_NOW)
    endif()
    if (__HAVE_LANGINFO_H)
        check_function_exists(nl_langinfo HAVE_NL_LANGINFO)
        if (HAVE_NL_LANGINFO)
            set(HAVE_LANGINFO_H 1)
        endif()
    endif()
    if (HAVE_SYS_SOCKET_H)
        check_struct_has_member("struct sockaddr" sa_len sys/socket.h HAVE_SOCKADDR_SA_LEN)
    endif()
    if (HAVE_SYS_STAT_H)
        check_struct_has_member("struct stat" st_birthtime sys/stat.h HAVE_STRUCT_STAT_ST_BIRTHTIME)
        check_struct_has_member("struct stat" st_blksize sys/stat.h HAVE_STRUCT_STAT_ST_BLKSIZE)
        check_struct_has_member("struct stat" st_blocks sys/stat.h HAVE_STRUCT_STAT_ST_BLOCKS)
        check_struct_has_member("struct stat" st_flags sys/stat.h HAVE_STRUCT_STAT_ST_FLAGS)
        check_struct_has_member("struct stat" st_gen sys/stat.h HAVE_STRUCT_STAT_ST_GEN)
        check_struct_has_member("struct stat" st_rdev sys/stat.h HAVE_STRUCT_STAT_ST_RDEV)
    endif()
    check_struct_has_member("struct tm" tm_zone time.h HAVE_STRUCT_TM_TM_ZONE)

    set(DOUBLE_IS_LITTLE_ENDIAN_IEEE754 1)
    set(HAVE_ZLIB_COPY 1)
    set(WITH_THREAD 1)
if (BUILD_FROM_CONAN)
    configure_file(${config_in} ${out_dir}/pyconfig.h)
else()
    if (IOS)
        configure_file(${config_in} ${out_dir}/pyconfig_ios.h)
        message(STATUS "Configure output ==================== " ${out_dir}/pyconfig_ios.h)
    elseif (APPLE)
        configure_file(${config_in} ${out_dir}/pyconfig_mac.h)
        message(STATUS "Configure output ==================== " ${out_dir}/pyconfig_mac.h)
    endif()
endif()
    
    cmake_pop_check_state()

    message(STATUS "=====================================")
    message(STATUS "Configure pyconfig.h done ===========")

endmacro()

