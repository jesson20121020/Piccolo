/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.8
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#include <qgraphicsitem.h>

#include <qgraphicsitem.h>
#include <qpainterpath.h>
#include <qpainter.h>
#include <qstyleoption.h>
#include <qwidget.h>
#include <qpoint.h>
#include <qrect.h>
#include <qbrush.h>
#include <qpen.h>
#include <qnamespace.h>
#include <qlist.h>
#include <qgraphicstransform.h>
#include <qgraphicseffect.h>
#include <qgraphicsitem.h>
#include <qtransform.h>
#include <qregion.h>
#include <qsize.h>
#include <qlist.h>
#include <qgraphicswidget.h>
#include <qgraphicssceneevent.h>
#include <qcoreevent.h>
#include <qgraphicssceneevent.h>
#include <qevent.h>
#include <qvariant.h>
#include <qnamespace.h>
#include <qevent.h>
#include <qgraphicssceneevent.h>
#include <qevent.h>
#include <qgraphicssceneevent.h>
#include <qgraphicssceneevent.h>
#include <qpolygon.h>
#include <qnamespace.h>
#include <qcursor.h>
#include <qstring.h>
#include <qgraphicsitem.h>
#include <qgraphicsitem.h>
#include <qgraphicsscene.h>


class sipQGraphicsPathItem : public  ::QGraphicsPathItem
{
public:
    sipQGraphicsPathItem( ::QGraphicsItem*);
    sipQGraphicsPathItem(const  ::QPainterPath&, ::QGraphicsItem*);
    virtual ~sipQGraphicsPathItem();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtectVirt_contextMenuEvent(bool, ::QGraphicsSceneContextMenuEvent*);
    void sipProtectVirt_dragEnterEvent(bool, ::QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragLeaveEvent(bool, ::QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragMoveEvent(bool, ::QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dropEvent(bool, ::QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_focusInEvent(bool, ::QFocusEvent*);
    void sipProtectVirt_focusOutEvent(bool, ::QFocusEvent*);
    void sipProtectVirt_hoverEnterEvent(bool, ::QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverLeaveEvent(bool, ::QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverMoveEvent(bool, ::QGraphicsSceneHoverEvent*);
    void sipProtectVirt_inputMethodEvent(bool, ::QInputMethodEvent*);
     ::QVariant sipProtectVirt_inputMethodQuery(bool, ::Qt::InputMethodQuery) const;
     ::QVariant sipProtectVirt_itemChange(bool, ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);
    void sipProtectVirt_keyPressEvent(bool, ::QKeyEvent*);
    void sipProtectVirt_keyReleaseEvent(bool, ::QKeyEvent*);
    void sipProtectVirt_mouseDoubleClickEvent(bool, ::QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool, ::QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mousePressEvent(bool, ::QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool, ::QGraphicsSceneMouseEvent*);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEvent(bool, ::QEvent*);
    bool sipProtectVirt_sceneEventFilter(bool, ::QGraphicsItem*, ::QEvent*);
    void sipProtectVirt_wheelEvent(bool, ::QGraphicsSceneWheelEvent*);
    void sipProtect_updateMicroFocus();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent( ::QGraphicsSceneWheelEvent*);
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*);
    bool sceneEvent( ::QEvent*);
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*);
    void mousePressEvent( ::QGraphicsSceneMouseEvent*);
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*);
    void keyReleaseEvent( ::QKeyEvent*);
    void keyPressEvent( ::QKeyEvent*);
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const;
    void inputMethodEvent( ::QInputMethodEvent*);
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*);
    void focusOutEvent( ::QFocusEvent*);
    void focusInEvent( ::QFocusEvent*);
    void dropEvent( ::QGraphicsSceneDragDropEvent*);
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*);
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*);
    int type() const;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);
     ::QPainterPath opaqueArea() const;
    bool isObscuredBy(const  ::QGraphicsItem*) const;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const;
    bool contains(const  ::QPointF&) const;
     ::QPainterPath shape() const;
     ::QRectF boundingRect() const;
    void advance(int);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsPathItem(const sipQGraphicsPathItem &);
    sipQGraphicsPathItem &operator = (const sipQGraphicsPathItem &);

    char sipPyMethods[32];
};

sipQGraphicsPathItem::sipQGraphicsPathItem( ::QGraphicsItem*a0):  ::QGraphicsPathItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPathItem::sipQGraphicsPathItem(const  ::QPainterPath& a0, ::QGraphicsItem*a1):  ::QGraphicsPathItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPathItem::~sipQGraphicsPathItem()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

void sipQGraphicsPathItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPathItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return  ::QGraphicsPathItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtWidgets_156(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPathItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return  ::QGraphicsPathItem::sceneEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsPathItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return  ::QGraphicsPathItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_154(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtWidgets_154(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QVariant sipQGraphicsPathItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QGraphicsPathItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsPathItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return  ::QGraphicsPathItem::type();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsPathItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainterPath sipQGraphicsPathItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return  ::QGraphicsPathItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsPathItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return  ::QGraphicsPathItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_149(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtWidgets_149(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPathItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return  ::QGraphicsPathItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_148(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_148(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPathItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return  ::QGraphicsPathItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_147(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_147(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPathItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[28]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return  ::QGraphicsPathItem::contains(a0);

    extern bool sipVH_QtWidgets_146(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_146(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsPathItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return  ::QGraphicsPathItem::shape();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QRectF sipQGraphicsPathItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return  ::QGraphicsPathItem::boundingRect();

    extern  ::QRectF sipVH_QtWidgets_144(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_144(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsPathItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
         ::QGraphicsPathItem::advance(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPathItem::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg, ::QGraphicsSceneContextMenuEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg, ::QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg, ::QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg, ::QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_dropEvent(bool sipSelfWasArg, ::QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_focusInEvent(bool sipSelfWasArg, ::QFocusEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_focusOutEvent(bool sipSelfWasArg, ::QFocusEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg, ::QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg, ::QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg, ::QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg, ::QInputMethodEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

 ::QVariant sipQGraphicsPathItem::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg, ::Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ?  ::QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

 ::QVariant sipQGraphicsPathItem::sipProtectVirt_itemChange(bool sipSelfWasArg, ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    return (sipSelfWasArg ?  ::QGraphicsItem::itemChange(a0,a1) : itemChange(a0,a1));
}

void sipQGraphicsPathItem::sipProtectVirt_keyPressEvent(bool sipSelfWasArg, ::QKeyEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg, ::QKeyEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg, ::QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg, ::QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_mousePressEvent(bool sipSelfWasArg, ::QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsPathItem::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg, ::QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsPathItem::sipProtect_prepareGeometryChange()
{
     ::QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsPathItem::sipProtectVirt_sceneEvent(bool sipSelfWasArg, ::QEvent*a0)
{
    return (sipSelfWasArg ?  ::QGraphicsItem::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsPathItem::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg, ::QGraphicsItem*a0, ::QEvent*a1)
{
    return (sipSelfWasArg ?  ::QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQGraphicsPathItem::sipProtectVirt_wheelEvent(bool sipSelfWasArg, ::QGraphicsSceneWheelEvent*a0)
{
    (sipSelfWasArg ?  ::QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}

void sipQGraphicsPathItem::sipProtect_updateMicroFocus()
{
     ::QGraphicsItem::updateMicroFocus();
}


PyDoc_STRVAR(doc_QGraphicsPathItem_contextMenuEvent, "contextMenuEvent(self, QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_contextMenuEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneContextMenuEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_contextMenuEvent, doc_QGraphicsPathItem_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_dragEnterEvent, "dragEnterEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_dragEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_dragEnterEvent, doc_QGraphicsPathItem_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_dragLeaveEvent, "dragLeaveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_dragLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_dragLeaveEvent, doc_QGraphicsPathItem_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_dragMoveEvent, "dragMoveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_dragMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_dragMoveEvent, doc_QGraphicsPathItem_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_dropEvent, "dropEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_dropEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_dropEvent, doc_QGraphicsPathItem_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_focusInEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_focusInEvent, doc_QGraphicsPathItem_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_focusOutEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_focusOutEvent, doc_QGraphicsPathItem_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_hoverEnterEvent, "hoverEnterEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_hoverEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_hoverEnterEvent, doc_QGraphicsPathItem_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_hoverLeaveEvent, "hoverLeaveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_hoverLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_hoverLeaveEvent, doc_QGraphicsPathItem_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_hoverMoveEvent, "hoverMoveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_hoverMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_hoverMoveEvent, doc_QGraphicsPathItem_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_inputMethodEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_inputMethodEvent, doc_QGraphicsPathItem_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> Any");

extern "C" {static PyObject *meth_QGraphicsPathItem_inputMethodQuery(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::InputMethodQuery a0;
        const sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_inputMethodQuery, doc_QGraphicsPathItem_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_itemChange, "itemChange(self, QGraphicsItem.GraphicsItemChange, Any) -> Any");

extern "C" {static PyObject *meth_QGraphicsPathItem_itemChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_itemChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsItem::GraphicsItemChange a0;
        const  ::QVariant* a1;
        int a1State = 0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BEJ1", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            sipReleaseType(const_cast< ::QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_itemChange, doc_QGraphicsPathItem_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_keyPressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_keyPressEvent, doc_QGraphicsPathItem_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_keyReleaseEvent, "keyReleaseEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_keyReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_keyReleaseEvent, doc_QGraphicsPathItem_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_mouseDoubleClickEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_mouseDoubleClickEvent, doc_QGraphicsPathItem_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_mouseMoveEvent, "mouseMoveEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_mouseMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_mouseMoveEvent, doc_QGraphicsPathItem_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_mousePressEvent, "mousePressEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_mousePressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_mousePressEvent, doc_QGraphicsPathItem_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_mouseReleaseEvent, "mouseReleaseEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_mouseReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_mouseReleaseEvent, doc_QGraphicsPathItem_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_prepareGeometryChange, "prepareGeometryChange(self)");

extern "C" {static PyObject *meth_QGraphicsPathItem_prepareGeometryChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
            sipCpp->sipProtect_prepareGeometryChange();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_prepareGeometryChange, doc_QGraphicsPathItem_prepareGeometryChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_sceneEvent, "sceneEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsPathItem_sceneEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_sceneEvent, doc_QGraphicsPathItem_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_sceneEventFilter, "sceneEventFilter(self, QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsPathItem_sceneEventFilter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsItem* a0;
         ::QEvent* a1;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8J8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_sceneEventFilter, doc_QGraphicsPathItem_sceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_wheelEvent, "wheelEvent(self, QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsPathItem_wheelEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneWheelEvent* a0;
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_wheelEvent, doc_QGraphicsPathItem_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_updateMicroFocus, "updateMicroFocus(self)");

extern "C" {static PyObject *meth_QGraphicsPathItem_updateMicroFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsPathItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_updateMicroFocus, doc_QGraphicsPathItem_updateMicroFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_path, "path(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPathItem_path(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_path(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->path());

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_path, doc_QGraphicsPathItem_path);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_setPath, "setPath(self, QPainterPath)");

extern "C" {static PyObject *meth_QGraphicsPathItem_setPath(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_setPath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QPainterPath* a0;
         ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QPainterPath, &a0))
        {
            sipCpp->setPath(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_setPath, doc_QGraphicsPathItem_setPath);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsPathItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF((sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_boundingRect, doc_QGraphicsPathItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPathItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_shape, doc_QGraphicsPathItem_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_contains, "contains(self, Union[QPointF, QPoint]) -> bool");

extern "C" {static PyObject *meth_QGraphicsPathItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::contains(*a0) : sipCpp->contains(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_contains, doc_QGraphicsPathItem_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsPathItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2 = 0;
         ::QGraphicsPathItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_paint, doc_QGraphicsPathItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsPathItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsPathItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_isObscuredBy, doc_QGraphicsPathItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPathItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_opaqueArea, doc_QGraphicsPathItem_opaqueArea);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPathItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsPathItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPathItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPathItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPathItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPathItem::type() : sipCpp->type());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPathItem, sipName_type, doc_QGraphicsPathItem_type);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsPathItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsPathItem(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsPathItem *sipCpp = reinterpret_cast< ::QGraphicsPathItem *>(sipCppV);

    if (targetType == sipType_QAbstractGraphicsShapeItem)
        return static_cast< ::QAbstractGraphicsShapeItem *>(sipCpp);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsPathItem(void *, int);}
static void release_QGraphicsPathItem(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsPathItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsPathItem *>(sipCppV);
}


extern "C" {static void dealloc_QGraphicsPathItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsPathItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsPathItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsPathItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsPathItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsPathItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsPathItem *sipCpp = 0;

    {
         ::QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsPathItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QPainterPath* a0;
         ::QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QPainterPath, &a0, sipType_QGraphicsItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsPathItem(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsPathItem[] = {{1, 255, 1}};


static PyMethodDef methods_QGraphicsPathItem[] = {
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsPathItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsPathItem_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_contains)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), (PyCFunction)meth_QGraphicsPathItem_contextMenuEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), (PyCFunction)meth_QGraphicsPathItem_dragEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), (PyCFunction)meth_QGraphicsPathItem_dragLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), (PyCFunction)meth_QGraphicsPathItem_dragMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), (PyCFunction)meth_QGraphicsPathItem_dropEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), (PyCFunction)meth_QGraphicsPathItem_focusInEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), (PyCFunction)meth_QGraphicsPathItem_focusOutEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), (PyCFunction)meth_QGraphicsPathItem_hoverEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), (PyCFunction)meth_QGraphicsPathItem_hoverLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), (PyCFunction)meth_QGraphicsPathItem_hoverMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), (PyCFunction)meth_QGraphicsPathItem_inputMethodEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), (PyCFunction)meth_QGraphicsPathItem_inputMethodQuery, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsPathItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_itemChange), (PyCFunction)meth_QGraphicsPathItem_itemChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), (PyCFunction)meth_QGraphicsPathItem_keyPressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), (PyCFunction)meth_QGraphicsPathItem_keyReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), (PyCFunction)meth_QGraphicsPathItem_mouseDoubleClickEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), (PyCFunction)meth_QGraphicsPathItem_mouseMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), (PyCFunction)meth_QGraphicsPathItem_mousePressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), (PyCFunction)meth_QGraphicsPathItem_mouseReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsPathItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsPathItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_paint)},
    {SIP_MLNAME_CAST(sipName_path), meth_QGraphicsPathItem_path, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_path)},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), (PyCFunction)meth_QGraphicsPathItem_prepareGeometryChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEvent), (PyCFunction)meth_QGraphicsPathItem_sceneEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), (PyCFunction)meth_QGraphicsPathItem_sceneEventFilter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setPath), meth_QGraphicsPathItem_setPath, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_setPath)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsPathItem_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_shape)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsPathItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPathItem_type)},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), (PyCFunction)meth_QGraphicsPathItem_updateMicroFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), (PyCFunction)meth_QGraphicsPathItem_wheelEvent, METH_VARARGS|METH_KEYWORDS, NULL}
};

PyDoc_STRVAR(doc_QGraphicsPathItem, "\1QGraphicsPathItem(parent: QGraphicsItem = None)\n"
"QGraphicsPathItem(QPainterPath, parent: QGraphicsItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsPathItem = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsPathItem = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsPathItem,
        {0},
        &plugin_QGraphicsPathItem
    },
    {
        sipNameNr_QGraphicsPathItem,
        {0, 0, 1},
        33, methods_QGraphicsPathItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsPathItem,
    -1,
    -1,
    supers_QGraphicsPathItem,
    0,
    init_type_QGraphicsPathItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsPathItem,
    0,
    0,
    0,
    release_QGraphicsPathItem,
    cast_QGraphicsPathItem,
    0,
    0,
    0,
    0,
    0,
    0
};
